# 服务器选择 - 简化列表，只保留最可靠的服务器
# server_names = ['yandex', 'quad9-doh-ip4-port443-nofilter-pri']

# 监听地址
listen_addresses = ['127.0.0.1:5353']
max_clients = 250

# IP 版本设置
ipv4_servers = true
ipv6_servers = false

# 协议支持
dnscrypt_servers = true
doh_servers = true
odoh_servers = false

# 服务器要求
require_dnssec = false
require_nolog = true
require_nofilter = true
disabled_server_names = []

# 代理设置 - 确保代理服务正常运行，mosdns在启用代理这里就不要启用了。
# proxy = 'socks5://127.0.0.1:7898'
force_tcp = false
# http3 = false

# 超时和连接设置
timeout = 10000
keepalive = 30
cert_refresh_delay = 240

# 引导解析器 - 使用国内稳定的 DNS
bootstrap_resolvers = ['119.29.29.29:53', '223.5.5.5:53']
ignore_system_dns = true

# 网络探测
netprobe_timeout = 60
netprobe_address = '119.29.29.29:53'

# 日志设置
log_files_max_size = 10
log_files_max_age = 7
log_files_max_backups = 1

# 过滤设置
block_ipv6 = true
block_unqualified = true
block_undelegated = true
reject_ttl = 10

# 转发规则：指定域名用特定DNS解析（需确保规则文件格式正确！）
# 格式要求：每行一条，如“example.com 9.9.9.9,8.8.8.8”（域名+逗号分隔的IP）
# 错误会导致dnscrypt-proxy崩溃，需检查：/etc/dnscrypt-proxy2/dnscrypt-forwarding-rules.txt
forwarding_rules = 'dnscrypt-forwarding-rules.txt'

cloaking_rules = 'dnscrypt-cloaking-rules.txt'
cloak_ttl = 600
cloak_ptr = false

# 缓存设置
cache = true
cache_size = 512
cache_min_ttl = 2400
cache_max_ttl = 86400
cache_neg_min_ttl = 60
cache_neg_max_ttl = 600

# captive portals（ captive portal 检测，避免公共网络拦截）
[captive_portals]
map_file = 'dnscrypt-captive-portals.txt'

# 本地 DoH 服务 - 确保证书路径正确
[local_doh]
listen_addresses = ['127.0.0.1:7058']
path = '/dns-query'
cert_file = '/etc/dnscrypt-proxy2/mosdns-cert.pem' 
cert_key_file = '/etc/dnscrypt-proxy2/mosdns-key.pem' 
# 将您的自签名证书追加到系统 CA 捆绑包末尾
# cat /etc/dnscrypt-proxy2/smartdns-cert.pem >> /etc/ssl/certs/ca-certificates.crt,ln -sf /etc/ssl/certs/ca-certificates.crt /etc/ssl/cert.pem
# openssl s_client -connect 127.0.0.1:7058 -servername smartdns -CAfile /etc/ssl/certs/ca-certificates.crt，/etc/init.d/dnscrypt-proxy restart

# 日志设置
[query_log]
  file = '/tmp/dnscrypt-query.log'
  format = 'tsv'
  # ignored_qtypes = ['DNSKEY', 'NS']
[nx_log]
  file = '/tmp/dnscrypt-nxdomain.log'
  format = 'tsv'

# 列表设置
[blocked_names]
  blocked_names_file = 'dnscrypt-blacklist-domains.txt'
  log_file = '/tmp/dnscrypt-blacklist-domains.log'
  log_format = 'tsv'

[blocked_ips]
  blocked_ips_file = 'dnscrypt-blacklist-ips.txt'
  log_file = '/tmp/dnscrypt-blacklist-ips.log'
  log_format = 'tsv'

[allowed_names]
  allowed_names_file = 'dnscrypt-whitelist-domains.txt'
  log_file = '/tmp/dnscrypt-whitelisted-domains.log'
  log_format = 'tsv'

[allowed_ips]
  allowed_ips_file = 'dnscrypt-whitelist-ips.txt'
  log_file = '/tmp/dnscrypt-whitelisted-ips.log'
  log_format = 'tsv'

# 计划任务
[schedules]
  # [schedules.time-to-sleep]
  #   mon = [{after='21:00', before='7:00'}]
  #   tue = [{after='21:00', before='7:00'}]
  #   wed = [{after='21:00', before='7:00'}]
  #   thu = [{after='21:00', before='7:00'}]
  #   fri = [{after='23:00', before='7:00'}]
  #   sat = [{after='23:00', before='7:00'}]
  #   sun = [{after='21:00', before='7:00'}]
  # [schedules.work]
  #   mon = [{after='9:00', before='18:00'}]
  #   tue = [{after='9:00', before='18:00'}]
  #   wed = [{after='9:00', before='18:00'}]
  #   thu = [{after='9:00', before='18:00'}]
  #   fri = [{after='9:00', before='17:00'}]

# 源设置
[sources]
  [sources.public-resolvers]
    urls = ['https://download.dnscrypt.info/resolvers-list/v3/public-resolvers.md', 'https://ghfast.top/https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v3/public-resolvers.md']
    cache_file = 'public-resolvers.md'
    minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
    refresh_delay = 72
    prefix = ''
  [sources.relays]
    urls = ['https://download.dnscrypt.info/resolvers-list/v3/relays.md', 'https://ghfast.top/https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v3/relays.md']
    cache_file = 'relays.md'
    minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
    refresh_delay = 72
    prefix = ''

# 兼容性设置
[broken_implementations]
fragments_blocked = ['cisco', 'cisco-ipv6', 'cisco-familyshield', 'cisco-familyshield-ipv6', 'cleanbrowsing-adult', 'cleanbrowsing-adult-ipv6', 'cleanbrowsing-family', 'cleanbrowsing-family-ipv6', 'cleanbrowsing-security', 'cleanbrowsing-security-ipv6']

# 客户端证书认证
[doh_client_x509_auth]
# creds = [
#    { server_name='*', client_cert='mosdns-cert.pem', client_key='mosdns-key.pem' }
# ]

# 匿名 DNS - 简化路由设置
[anonymized_dns]
routes = [
   { server_name = '*', via = ['anon-cs-singapore', 'anon-cs-tokyo'] }
]
skip_incompatible = true
direct_cert_fallback = false

# DNS64
[dns64]
# prefix = ['64:ff9b::/96']
# resolver = ['[2606:4700:4700::64]:53', '[2001:4860:4860::64]:53']

# 静态配置
[static]
  # [static.myserver]
  #   stamp = 'sdns://AQcAAAAAAAAAAAAQMi5kbnNjcnlwdC1jZXJ0Lg'
  [static.cisco]
    stamp = 'sdns://AQEAAAAAAAAADjIwOC42Ny4yMjAuMjIwILc1EUAgbyJdPivYItf9aR6hwzzI1maNDL4Ev6vKQ_t5GzIuZG5zY3J5cHQtY2VydC5vcGVuZG5zLmNvbQ'
  [static.cisco-doh]
    stamp = 'sdns://AgAAAAAAAAAADDE0Ni4xMTIuNDEuMiBoU4_HgY6B0kIqkGBjb6UoKkP2Dc4bumDC1_Orq2YAlw9kb2gub3BlbmRucy5jb20KL2Rucy1xdWVyeQ'
  [static.cisco-familyshield]
    stamp = 'sdns://AQEAAAAAAAAADjIwOC42Ny4yMjAuMTIzILc1EUAgbyJdPivYItf9aR6hwzzI1maNDL4Ev6vKQ_t5GzIuZG5zY3J5cHQtY2VydC5vcGVuZG5zLmNvbQ'
  [static.cisco-ipv6]
    stamp = 'sdns://AQEAAAAAAAAAD1syNjIwOjA6Y2NjOjoyXSC3NRFAIG8iXT4r2CLX_WkeocM8yNZmjQy-BL-rykP7eRsyLmRuc2NyeXB0LWNlcnQub3BlbmRucy5jb20'
  [static.cisco-ipv6-doh]
    stamp = 'sdns://AgAAAAAAAAAAEFsyNjIwOjExOTpmYzo6Ml0gaFOPx4GOgdJCKpBgY2-lKCpD9g3OG7pgwtfzq6tmAJcPZG9oLm9wZW5kbnMuY29tCi9kbnMtcXVlcnk'
  [static.cisco-ipv6-familyshield]
    stamp = 'sdns://AQEAAAAAAAAAEVsyNjIwOjExOTozNTo6MzVdILc1EUAgbyJdPivYItf9aR6hwzzI1maNDL4Ev6vKQ_t5GzIuZG5zY3J5cHQtY2VydC5vcGVuZG5zLmNvbQ'